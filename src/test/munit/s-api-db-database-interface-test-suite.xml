<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="s-api-db-database-interface-test-suite.xml" />
	<munit:test name="s-api-db-database-interface-test-suite-system-database-mainTest" doc:id="276d7086-e0a8-4c37-a366-f17c8c1479cf" description="Test" expectedErrorType="APIKIT:BAD_REQUEST">
		<munit:enable-flow-sources >
			<munit:enable-flow-source value="s-api-db-database-errorSub_Flow" />
		</munit:enable-flow-sources>
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when apikit:router" doc:id="59fe9d0d-9293-4875-9c2e-be5738ff96a1" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="system-database-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:error typeId="APIKIT:BAD_REQUEST" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when flow-ref" doc:id="bcf2972c-dab1-4987-bc48-c89faab7637a" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Flow Reference" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="c5fab40c-9173-4b4c-abc3-c563dfd417a0" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="s-api-db-database-errorSub_Flow" attributeName="name" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to system-database-main" doc:id="93e84f55-ac66-4ef8-b9f6-8d0d771abbe7" name="system-database-main"/>
		</munit:execution>
	</munit:test>
	<munit:test name="s-api-db-database-interface-test-suite-get:\database:system-database-configTest" doc:id="ffc0c68a-f324-4d68-b9e4-27c9bbf4a6f9" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when flow-ref" doc:id="dcbbe6bb-4819-4f85-a1cb-6fe1c4817e33" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Flow Reference" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="fa77ebfe-3bf0-4559-bf2a-54080bc03057" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="system-call-database" attributeName="name" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[%dw 2.0&#10;output application/json&#10;---&#10;[&#10;  {&#10;    "Region": "Sub-Saharan Africa",&#10;    "Country": "Namibia",&#10;    "ItemType": "Household",&#10;    "SalesChannel": "Offline",&#10;    "OrderPriority": "M",&#10;    "OrderDate": "8/31/2015",&#10;    "SalesID": "1"&#10;  },&#10;  {&#10;    "Region": "Europe",&#10;    "Country": "Iceland",&#10;    "ItemType": "Baby Food",&#10;    "SalesChannel": "Online",&#10;    "OrderPriority": "H",&#10;    "OrderDate": "11/20/2010",&#10;    "SalesID": "2"&#10;  },&#10;  {&#10;    "Region": "Europe",&#10;    "Country": "Russia",&#10;    "ItemType": "Meat",&#10;    "SalesChannel": "Online",&#10;    "OrderPriority": "L",&#10;    "OrderDate": "6/22/2017",&#10;    "SalesID": "3"&#10;  },&#10;  {&#10;    "Region": "Europe",&#10;    "Country": "Moldova",&#10;    "ItemType": "Meat",&#10;    "SalesChannel": "Online",&#10;    "OrderPriority": "L",&#10;    "OrderDate": "2/28/2012",&#10;    "SalesID": "4"&#10;  },&#10;  {&#10;    "Region": "Europe",&#10;    "Country": "Malta",&#10;    "ItemType": "Cereal",&#10;    "SalesChannel": "Online",&#10;    "OrderPriority": "M",&#10;    "OrderDate": "8/12/2010",&#10;    "SalesID": "5"&#10;  },&#10;  {&#10;    "Region": "Asia",&#10;    "Country": "Indonesia",&#10;    "ItemType": "Meat",&#10;    "SalesChannel": "Online",&#10;    "OrderPriority": "H",&#10;    "OrderDate": "8/20/2010",&#10;    "SalesID": "6"&#10;  },&#10;  {&#10;    "Region": "Sub-Saharan Africa",&#10;    "Country": "Djibouti",&#10;    "ItemType": "Household",&#10;    "SalesChannel": "Online",&#10;    "OrderPriority": "M",&#10;    "OrderDate": "2/3/2011",&#10;    "SalesID": "7"&#10;  },&#10;  {&#10;    "Region": "Europe",&#10;    "Country": "Greece",&#10;    "ItemType": "Household",&#10;    "SalesChannel": "Online",&#10;    "OrderPriority": "L",&#10;    "OrderDate": "9/11/2015",&#10;    "SalesID": "8"&#10;  },&#10;  {&#10;    "Region": "Sub-Saharan Africa",&#10;    "Country": "Cameroon",&#10;    "ItemType": "Cosmetics",&#10;    "SalesChannel": "Offline",&#10;    "OrderPriority": "M",&#10;    "OrderDate": "1/31/2014",&#10;    "SalesID": "9"&#10;  },&#10;  {&#10;    "Region": "Sub-Saharan Africa",&#10;    "Country": "Nigeria",&#10;    "ItemType": "Cosmetics",&#10;    "SalesChannel": "Online",&#10;    "OrderPriority": "C",&#10;    "OrderDate": "11/21/2015",&#10;    "SalesID": "10"&#10;  },&#10;  {&#10;    "Region": "Sub-Saharan Africa",&#10;    "Country": "Senegal",&#10;    "ItemType": "Fruits",&#10;    "SalesChannel": "Offline",&#10;    "OrderPriority": "M",&#10;    "OrderDate": "8/29/2016",&#10;    "SalesID": "11"&#10;  },&#10;  {&#10;    "Region": "Middle East and North Africa",&#10;    "Country": "Afghanistan",&#10;    "ItemType": "Cosmetics",&#10;    "SalesChannel": "Offline",&#10;    "OrderPriority": "L",&#10;    "OrderDate": "10/21/2016",&#10;    "SalesID": "12"&#10;  },&#10;  {&#10;    "Region": "Asia",&#10;    "Country": "India",&#10;    "ItemType": "Vegetables",&#10;    "SalesChannel": "Online",&#10;    "OrderPriority": "C",&#10;    "OrderDate": "3/21/2010",&#10;    "SalesID": "13"&#10;  },&#10;  {&#10;    "Region": "Middle East and North Africa",&#10;    "Country": "Lebanon",&#10;    "ItemType": "Vegetables",&#10;    "SalesChannel": "Online",&#10;    "OrderPriority": "L",&#10;    "OrderDate": "10/15/2010",&#10;    "SalesID": "14"&#10;  },&#10;  {&#10;    "Region": "Middle East and North Africa",&#10;    "Country": "Turkey",&#10;    "ItemType": "Office Supplies",&#10;    "SalesChannel": "Online",&#10;    "OrderPriority": "L",&#10;    "OrderDate": "10/4/2010",&#10;    "SalesID": "15"&#10;  },&#10;  {&#10;    "Region": "Middle East and North Africa",&#10;    "Country": "Iraq",&#10;    "ItemType": "Cosmetics",&#10;    "SalesChannel": "Offline",&#10;    "OrderPriority": "M",&#10;    "OrderDate": "10/14/2014",&#10;    "SalesID": "16"&#10;  },&#10;  {&#10;    "Region": "Sub-Saharan Africa",&#10;    "Country": "Rwanda",&#10;    "ItemType": "Personal Care",&#10;    "SalesChannel": "Offline",&#10;    "OrderPriority": "M",&#10;    "OrderDate": "6/15/2013",&#10;    "SalesID": "17"&#10;  },&#10;  {&#10;    "Region": "Europe",&#10;    "Country": "Ukraine",&#10;    "ItemType": "Baby Food",&#10;    "SalesChannel": "Offline",&#10;    "OrderPriority": "M",&#10;    "OrderDate": "5/7/2017",&#10;    "SalesID": "18"&#10;  },&#10;  {&#10;    "Region": "Europe",&#10;    "Country": "Finland",&#10;    "ItemType": "Office Supplies",&#10;    "SalesChannel": "Online",&#10;    "OrderPriority": "H",&#10;    "OrderDate": "5/21/2015",&#10;    "SalesID": "19"&#10;  }&#10;]]' mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to get:\database:system-database-config" doc:id="e8571988-8d79-4205-8cf0-22f76015211d" name="get:\database:system-database-config"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="359a3410-ef25-407d-a8fd-05fb0e1c659d" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>


</mule>
